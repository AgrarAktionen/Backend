# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Build appsrv with maven

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/setup-node@v2
      with:
        node-version: '14'
    - name: Set up JDK
      uses: actions/setup-java@v1
      with:
        java-version: 14
    - uses: actions/checkout@v2
    - name: cache maven repository
      uses: actions/cache@v2
      with:
        path: |
          ~/.m2
        key: ${{ runner.os }}-build-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-build-m2-
    - name: Build with Maven
      run: mvn -B package

    # Pull the openjdk image used in our Dockerfile
    - name: pull openjdk docker image
      run: docker pull openjdk:14

    - name: build docker image
      run: |
        docker build appsrv --tag registry.cloud.htl-leonding.ac.at/${{ secrets.REGISTRY_USER }}/appsrv:latest
      working-directory: distribution/target/distribution-0.5.0-dist/docker

    - name: login to LeoCloud
      uses: docker/login-action@v1
      with:
        registry: registry.cloud.htl-leonding.ac.at
        username: ${{ secrets.REGISTRY_USER }}@${{ secrets.REGISTRY_EMAIL_DOMAIN }}
        password: ${{ secrets.REGISTRY_PASSWORD }}

    - name: push docker images to LeoCloud
      run: |
        docker push registry.cloud.htl-leonding.ac.at/c.aberger/appsrv:latest
