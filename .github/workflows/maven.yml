# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Build appsrv with maven

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK
      uses: actions/setup-java@v1
      with:
        java-version: 14
    - name: cache maven repository
      uses: actions/cache@v2
      with:
        path: |
          ~/.m2
        key: ${{ runner.os }}-build-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-build-m2-
    - name: Build with Maven
      run: mvn -B package

    # Pull the latest image to build, and avoid caching pull-only images.
    # (docker pull is faster than caching in most cases.)
    - name: get pull-only images
      run: |
        docker pull openjdk:14

    # In this step, this action saves a list of existing images,
    # the cache is created without them in the post run.
    # It also restores the cache if it exists.
    - name: cache docker images
      uses: satackey/action-docker-layer-caching@v0.0.11
      # Ignore the failure of a step and avoid terminating the job.
      continue-on-error: true

    - name: build docker images
      run: |
        docker build appsrv --tag registry.cloud.htl-leonding.ac.at/${{ secrets.REGISTRY_USER }}/appsrv:latest
      working-directory: distribution/target/distribution-0.5.0-dist/docker

    - name: login to LeoCloud
      uses: docker/login-action@v1
      with:
        registry: registry.cloud.htl-leonding.ac.at
        username: ${{ secrets.REGISTRY_USER }}@${{ secrets.REGISTRY_EMAIL_DOMAIN }}
        password: ${{ secrets.REGISTRY_PASSWORD }}

    - name: push docker images to LeoCloud
      run: |
        docker push registry.cloud.htl-leonding.ac.at/c.aberger/appsrv:latest
